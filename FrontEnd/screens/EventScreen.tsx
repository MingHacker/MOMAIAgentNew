import React, { useState } from 'react';
import { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, Platform } from 'react-native';

// mock event Êï∞ÊçÆ
const mockEvents = [
  {
    id: '1',
    title: '‰∫≤Â≠êÁªòÊú¨ÊïÖ‰∫ã‰ºö',
    time: '2024-06-15 10:00-11:30',
    location: 'Â∏ÇÂõæ‰π¶È¶ÜÂÑøÁ´•Âå∫',
    price: 'ÂÖçË¥π',
    description: 'ÈÄÇÂêà2-6Â≤ÅÂÆùÂÆùÔºå‰∏ì‰∏öËÄÅÂ∏àÂ∏¶È¢Ü‰∫≤Â≠êÂÖ±ËØªÁªòÊú¨Ôºå‰∫íÂä®Ê∏∏Êàè‰∏∞ÂØå„ÄÇ',
  },
  {
    id: '2',
    title: 'ÂÑøÁ´•ÁßëÂ≠¶ÂÆûÈ™åÊó•',
    time: '2024-06-16 14:00-16:00',
    location: '‰∫≤Â≠êÊ¥ªÂä®‰∏≠ÂøÉ',
    price: '50ÂÖÉ/ÂÆ∂Â∫≠',
    description: 'Âä®ÊâãÂÅöÂÆûÈ™åÔºåÊøÄÂèëÂ≠©Â≠êÁßëÂ≠¶ÂÖ¥Ë∂£ÔºåÈÄÇÂêà3-8Â≤Å„ÄÇ',
  },
  {
    id: '3',
    title: 'Êà∑Â§ñ‰∫≤Â≠êÈáéÈ§ê',
    time: '2024-06-18 09:30-12:00',
    location: 'ÂüéÂ∏ÇÂÖ¨Âõ≠ËçâÂù™',
    price: 'Ëá™Â∏¶È§êÈ£ü',
    description: 'Â¶àÂ¶à‰ª¨Â∏¶Â®É‰∏ÄËµ∑Êà∑Â§ñÈáéÈ§êÔºåÁªìËØÜÊñ∞ÊúãÂèãÔºåÈÄÇÂêàÊâÄÊúâÂπ¥ÈæÑÊÆµ„ÄÇ',
  },
  {
    id: '4',
    title: '‰∫≤Â≠êÁëú‰ºΩ‰ΩìÈ™åËØæ',
    time: '2024-06-20 15:00-16:00',
    location: 'Áëú‰ºΩÁîüÊ¥ªÈ¶Ü',
    price: '30ÂÖÉ/ÂÆ∂Â∫≠',
    description: '‰∫≤Â≠ê‰∫íÂä®Áëú‰ºΩÔºåËàíÁºìË∫´ÂøÉÔºåÈÄÇÂêà2-7Â≤ÅÂÆùÂÆùÂíåÂ¶àÂ¶à„ÄÇ',
  },
];

export default function FamilyEventsScreen() {
  const [selectedEvent, setSelectedEvent] = useState(null);
  const [modalVisible, setModalVisible] = useState(false);

  const handleEventPress = (event) => {
    setSelectedEvent(event);
    setModalVisible(true);
  };

  const renderEventItem = ({ item }) => (
    <TouchableOpacity style={styles.eventItem} onPress={() => handleEventPress(item)}>
      <Text style={styles.eventTitle}>{item.title}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.header}>ÈôÑËøë‰∫≤Â≠êÊ¥ªÂä®Êé®Ëçê</Text>
      <FlatList
        data={mockEvents}
        renderItem={renderEventItem}
        keyExtractor={item => item.id}
        contentContainerStyle={{ paddingBottom: 30 }}
      />
      <Modal
        visible={modalVisible}
        transparent
        animationType="fade"
        onRequestClose={() => setModalVisible(false)}
      >
        <View style={styles.modalOverlay}>
          <View style={styles.modalCard}>
            <Text style={styles.modalTitle}>{selectedEvent?.title}</Text>
            <Text style={styles.modalInfo}>üïí {selectedEvent?.time}</Text>
            <Text style={styles.modalInfo}>üìç {selectedEvent?.location}</Text>
            <Text style={styles.modalInfo}>üí∞ {selectedEvent?.price}</Text>
            <Text style={styles.modalDesc}>{selectedEvent?.description}</Text>
            <TouchableOpacity style={styles.closeBtn} onPress={() => setModalVisible(false)}>
              <Text style={styles.closeBtnText}>Close</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F9F7FF',
    paddingTop: 24,
    paddingHorizontal: 16,
  },
  header: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#6B21A8',
    marginBottom: 18,
    textAlign: 'center',
    letterSpacing: 1,
  },
  eventItem: {
    backgroundColor: '#fff',
    borderRadius: 14,
    padding: 18,
    marginBottom: 14,
    shadowColor: '#000',
    shadowOpacity: 0.06,
    shadowOffset: { width: 0, height: 2 },
    shadowRadius: 6,
    elevation: 2,
  },
  eventTitle: {
    fontSize: 16,
    color: '#4C3575',
    fontWeight: '600',
  },
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0,0,0,0.25)',
    justifyContent: 'center',
    alignItems: 'center',
  },
  modalCard: {
    backgroundColor: '#fff',
    borderRadius: 18,
    padding: 28,
    width: '85%',
    shadowColor: '#000',
    shadowOpacity: 0.12,
    shadowOffset: { width: 0, height: 6 },
    shadowRadius: 16,
    elevation: 6,
    alignItems: 'center',
  },
  modalTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#6B21A8',
    marginBottom: 10,
    textAlign: 'center',
  },
  modalInfo: {
    fontSize: 15,
    color: '#4C3575',
    marginBottom: 6,
  },
  modalDesc: {
    fontSize: 14,
    color: '#666',
    marginTop: 10,
    marginBottom: 18,
    textAlign: 'center',
    lineHeight: 20,
  },
  closeBtn: {
    backgroundColor: '#F3E8FF',
    borderRadius: 20,
    paddingVertical: 8,
    paddingHorizontal: 28,
  },
  closeBtnText: {
    color: '#6B21A8',
    fontSize: 15,
    fontWeight: '600',
  },
});
